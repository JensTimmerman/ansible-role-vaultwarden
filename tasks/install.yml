- name: Ensure vaultwarden system group
  ansible.builtin.group:
    name: vaultwarden
    system: true
    state: present

- name: Ensure vaultwarden system user
  ansible.builtin.user:
    name: vaultwarden
    group: vaultwarden
    home: "{{ vaultwarden_directory }}"
    create_home: true
    move_home: true
    password: '!'
    system: true
    shell: /bin/sh
    comment: Vaultwarden server,,,
    state: present

- name: Ensure vaultwarden directory is owned by vaultwarden user
  ansible.builtin.file:
    path: "{{ vaultwarden_directory }}"
    state: directory
    recurse: true
    owner: vaultwarden
    group: vaultwarden

- name: Install required build-packages
  ansible.builtin.package:
    name: "{{ _vaultwarden_build_packages }}"
    state: present

- name: Get rustup installer
  ansible.builtin.get_url:
    url: https://sh.rustup.rs
    dest: ~vaultwarden/rustup.sh
    owner: vaultwarden
    group: vaultwarden
    mode: u=rw,go=

- name: Install rust nightly
  ansible.builtin.command: su vaultwarden -c '/bin/sh ~vaultwarden/rustup.sh --no-modify-path --default-toolchain nightly -y'
  register: _vaultwarden_install_rust_nightly
  changed_when: "'nightly installed' in _vaultwarden_install_rust_nightly.stdout"

- name: Download vaultwarden repo
  ansible.builtin.unarchive:
    src: "https://github.com/dani-garcia/vaultwarden/archive/{{ vaultwarden_target_version }}.tar.gz"
    dest: "{{ vaultwarden_directory }}"
    creates: "{{ vaultwarden_directory }}/vaultwarden-{{ vaultwarden_target_version }}"
    remote_src: true
    owner: vaultwarden
    group: vaultwarden

- name: Compile vaultwarden
  ansible.builtin.command:
    cmd: su vaultwarden -c '~vaultwarden/.cargo/bin/cargo build --features {{ vaultwarden_build_backend }} --release'
    chdir: "{{ vaultwarden_directory }}/vaultwarden-{{ vaultwarden_target_version }}"
    creates: "{{ omit if vaultwarden_force_recompile else creates }}"
  vars:
    creates: "{{ vaultwarden_directory }}/vaultwarden-{{ vaultwarden_target_version }}/target/release/vaultwarden"

- name: Copy vaultwarden executable
  ansible.builtin.copy:
    src: "{{ vaultwarden_directory }}/vaultwarden-{{ vaultwarden_target_version }}/target/release/vaultwarden"
    dest: "{{ vaultwarden_directory }}/vaultwarden"
    remote_src: true
    mode: preserve
    owner: vaultwarden
    group: vaultwarden
  notify: Restart vaultwarden

- name: Download patched vaultwarden webvault
  ansible.builtin.unarchive:
    src: >-
      https://github.com/dani-garcia/bw_web_builds/releases/download/
      {{ vaultwarden_webvault_target_version }}
      /bw_web_{{ vaultwarden_webvault_target_version }}.tar.gz
    dest: "{{ vaultwarden_directory }}"
    remote_src: true
    owner: vaultwarden
    group: vaultwarden
  when: vaultwarden_webvault|bool

- name: Create datadir
  ansible.builtin.file:
    path: "{{ vaultwarden_datadir }}"
    state: directory
    owner: vaultwarden
    group: vaultwarden
    mode: u=rw,go=
